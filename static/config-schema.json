{
  "type": "object",
  "required": ["datasets"],
  "properties": {
    "datasets": {
      "type": "array",
      "items": [{
        "title": "Jeu de données",
        "description": "Ce jeu doit contenir au moins une colonne avec valeur numérique",
        "type": "object",
        "x-fromUrl": "api/v1/datasets?status=finalized&field-type=integer,number&q={q}&select=id,title&owner={context.owner.type}:{context.owner.id}",
        "x-itemsProp": "results",
        "x-itemTitle": "title",
        "x-itemKey": "href",
        "properties": {
          "href": {"type": "string"},
          "title": {"type": "string"},
          "id": {"type": "string"}
        }
      }]
    }
  },
  "dependencies": {
    "datasets.0.id": {
      "required": ["chart", "colorscheme"],
      "properties": {
        "title": {
          "type": "string",
          "title": "Titre"
        },
        "chart": {
          "type": "object",
          "oneOf": [{"$ref": "#/definitions/linesBasedChart"}, {"$ref": "#/definitions/countBasedChart"}, {"$ref": "#/definitions/metricBasedChart"}]
        },
        "colorscheme": {"$ref": "#/definitions/colorscheme"},
        "filters": {"$ref": "#/definitions/filters"}
      }
    }
  },
  "definitions": {
    "linesBasedChart": {
      "title": "valeurs simples",
      "type": "object",
      "required": ["sortBy", "sortOrder", "size", "render", "labelsField"],
      "properties": {
        "type": {
          "title": "Préparation des données",
          "description": "Choisissez la manière de traiter les données avant de les présenter dans un graphique.\n  - **valeurs simples**: les valeurs sont lues directement depuis chaque ligne du jeu de données.\n  - **comptage sur groupes de ligne**: les lignes du jeu de données sont groupées selon un critère et les valeurs affichées sont les nombres de lignes pour chaque groupe.\n  - **calculs sur groupes de lignes**: les lignes du jeu de données sont groupées selon un critère puis les valeurs sont obtenues par calcul sur une colonne numérique pour chaque groupe (somme, moyenne, etc.)",
          "const": "linesBased"
        },
        "labelsField": {
          "type": "object",
          "title": "Libellés",
          "description": "Choisissez la colonne contenant les libellés à présenter en légende.",
          "x-fromUrl": "{datasets.0.href}/schema",
          "x-itemTitle": "label",
          "x-itemKey": "key",
          "default": {
            "key": "_i"
          }
        }
      },
      "dependencies": {
        "labelsField": {
          "properties": {
            "valuesFields": {
              "type": "array",
              "title": "Valeurs",
              "description": "Choisissez une ou plusieurs colonnes de valeurs numériques à présenter dans le graphique.",
              "x-fromUrl": "{datasets.0.href}/schema?type=integer,number",
              "x-itemTitle": "label",
              "x-itemKey": "key",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "valuesFields.0": {
          "properties": {
            "size": {"$ref": "#/definitions/size"},
            "sortBy": {"$ref": "#/definitions/sortBy"}
          }
        },
        "sortBy": {
          "properties": {
            "sortOrder": {"$ref": "#/definitions/sortOrder"},
            "render": {"$ref": "#/definitions/renderLines"}
          }
        }
      }
    },
    "countBasedChart": {
      "title": "comptage sur groupes de lignes",
      "type": "object",
      "required": ["groupBy", "sort", "render"],
      "properties": {
        "type": {
          "const": "countBased"
        },
        "groupBy": {"$ref": "#/definitions/groupBy"}
      },
      "dependencies": {
        "groupBy.field.key": {
          "properties": {
            "sort": {"$ref": "#/definitions/sortCount"},
            "render": {"$ref": "#/definitions/renderAgg"}
          }
        }
      }
    },
    "metricBasedChart": {
      "title": "calculs sur groupes de lignes",
      "type": "object",
      "required": ["valueField", "metricType", "groupBy", "sort", "render"],
      "properties": {
        "type": {
          "const": "metricBased"
        },
        "groupBy": {"$ref": "#/definitions/groupBy"}

      },
      "dependencies": {
        "groupBy.field.key": {
          "properties": {
            "metricType": {"$ref": "#/definitions/metricType"}
          }
        },
        "metricType": {
          "properties": {
            "valueField": {"$ref": "#/definitions/valueFieldAgg"}
          }
        },
        "valueField.key": {
          "properties": {
            "sort": {"$ref": "#/definitions/sortMetric"},
            "render": {"$ref": "#/definitions/renderAgg"}
          }
        }
      }
    },
    "valueFieldAgg": {
      "type": "object",
      "title": "Valeurs",
      "description": "La colonne contenant la valeur numérique sur laquelle effectuer un calcul.",
      "x-fromUrl": "{datasets.0.href}/schema?type=integer,number",
      "x-itemTitle": "label",
      "x-itemKey": "key"
    },
    "sortBy": {
      "type": "object",
      "title": "Trier par",
      "x-fromUrl": "{datasets.0.href}/schema",
      "x-itemTitle": "label",
      "x-itemKey": "key",
      "default": {
        "key": "_i"
      }
    },
    "colorscheme": {
      "type": "object",
      "title": "Palette de couleurs",
      "default": {
        "type": "qualitative"
      },
      "oneOf": [{
        "title": "Qualitative",
        "required": ["name"],
        "properties": {
          "type": {
            "const": "qualitative",
            "title": "Type",
            "description": "**Qualitative** : pour représenter des données catégorielles ou nominales.\n\n**Divergente** : accorde la même importance aux différentes valeurs des données.\n\n**Séquentielle** : pour des données ordonnées qui varient d’une valeur faible à une valeur forte (gradient)"
          },
          "name": {
            "type": "string",
            "oneOf": [
              {"const": "Accent", "title": "Accent"},
              {"const": "Dark2", "title": "Foncé"},
              {"const": "Paired", "title": "Paires"},
              {"const": "Set1", "title": "Ensemble 1"},
              {"const": "Set2", "title": "Ensemble 2"}
            ],
            "default": "Dark2",
            "title": "Nom"
          }
        }
      }, {
        "title": "Divergente",
        "properties": {
          "type": {
            "const": "diverging"
          },
          "name": {
            "type": "string",
            "oneOf": [
              {"const": "BrBG", "title": "Marron-Bleu-Vert"},
              {"const": "PRGn", "title": "Violet-Vert"},
              {"const": "PiYG", "title": "Rose-Jaune-Vert"},
              {"const": "PuOr", "title": "Orange-Violet"},
              {"const": "RdBu", "title": "Rouge-Bleu"},
              {"const": "RdGy", "title": "Rouge-Gris"},
              {"const": "RdYlBu", "title": "Rouge-Jaune-Bleu"},
              {"const": "RdYlGn", "title": "Rouge-jaune-Vert"},
              {"const": "Spectral", "title": "Spectral"}
            ],
            "default": "RdYlGn",
            "title": "Nom"
          },
          "reverse": {
            "type": "boolean",
            "title": "Inverser"
          }
        }
      }, {
        "title": "Séquentielle",
        "properties": {
          "type": {
            "const": "sequential"
          },
          "name": {
            "type": "string",
            "oneOf": [
              {"const": "Blues", "title": "Bleu"},
              {"const": "BuGn", "title": "Bleu-Vert"},
              {"const": "BuPu", "title": "Bleu-Violet"},
              {"const": "GnBu", "title": "Vert-Bleu"},
              {"const": "Greens", "title": "Vert"},
              {"const": "Greys", "title": "Gris"},
              {"const": "OrRd", "title": "Orange-Rouge"},
              {"const": "Oranges", "title": "Orange"},
              {"const": "PuBu", "title": "Violet-Bleu"},
              {"const": "PuBuGn", "title": "Violet-Bleu-Vert"},
              {"const": "PuRd", "title": "Violet-Rouge"},
              {"const": "Purples", "title": "Violet"},
              {"const": "RdPu", "title": "Rouge-Violet"},
              {"const": "Reds", "title": "Rouge"},
              {"const": "YlGn", "title": "Jaune-Vert"},
              {"const": "YlGnBu", "title": "Jaune-Vert-Bleu"},
              {"const": "YlOrBr", "title": "Jaune-Orange-Marron"},
              {"const": "Oranges", "title": "Orange"},
              {"const": "YlOrRd", "title": "Jaune-Orange-Marron"}
            ],
            "default": "YlOrRd",
            "title": "Nom"
          },
          "reverse": {
            "type": "boolean",
            "title": "Inverser"
          },
          "subset": {
            "type": "string",
            "title": "Sous-ensemble",
            "oneOf": [
              {"const": "all", "title": "Route"},
              {"const": "light", "title": "Clair"},
              {"const": "dark", "title": "Foncé"}
            ],
            "default": "Tout"
          }
        }
      }]
    },
    "groupBy": {
      "type": "object",
      "required": ["type"],
      "oneOf": [{
        "title": "valeurs exactes d'une colonne",
        "required": ["field"],
        "properties": {
          "type": { "const": "value", "title": "Grouper par" },
          "field": {"$ref": "#/definitions/groupField"}
        },
        "dependencies": {
          "field.key": {
            "properties": {
              "size": {"$ref": "#/definitions/nbGroups"}
            }
          }
        }
      }, {
        "title": "intervalles d'une colonne de type date",
        "required": ["field", "interval"],
        "properties": {
          "type": { "const": "date" },
          "field": {"$ref": "#/definitions/groupFieldDate"},
          "interval": {
            "type": "string",
            "title": "Taille des intervalles",
            "default": "day",
            "oneOf": [
              {"const": "hour", "title": "Heure"},
              {"const": "day", "title": "Jour"},
              {"const": "week", "title": "Semaine"},
              {"const": "month", "title": "Mois"},
              {"const": "year", "title": "Année"}
            ]
          }
        }
      }, {
        "title": "intervalles d'une colonne numérique",
        "required": ["field", "interval"],
        "properties": {
          "type": { "const": "number" },
          "field": {"$ref": "#/definitions/groupFieldNumber"},
          "interval": {
            "type": "integer",
            "title": "Taille des intervalles",
            "default": 100
          }
        }
      }]
    },
    "metricType": {
      "type": "string",
      "title": "Calcul à appliquer",
      "default": "sum",
      "oneOf": [
        {"const": "count", "title": "nombre d'éléments dans le groupe"},
        {"const": "avg", "title": "moyenne"},
        {"const": "min", "title": "valeur minimale"},
        {"const": "max", "title": "valeur maximale"},
        {"const": "sum", "title": "somme"}
      ]
    },
    "sortMetric": {
      "type": "string",
      "title": "Trier par",
      "default": "-metric",
      "oneOf": [
        {"const": "-metric", "title": "le résultat du calcul (descendant)"},
        {"const": "metric", "title": "le résultat du calcul (ascendant)"},
        {"const": "-count", "title": "le nombre d'éléments dans le groupe (descendant)"},
        {"const": "key", "title": "la clé du groupe (ascendant)"},
        {"const": "-key", "title": "la clé du groupe (descendant)"}
      ]
    },
    "sortCount": {
      "type": "string",
      "title": "Trier par",
      "default": "-count",
      "oneOf": [
        {"const": "-count", "title": "le nombre d'éléments dans le groupe (descendant)"},
        {"const": "key", "title": "la clé du groupe (ascendant)"},
        {"const": "-key", "title": "la clé du groupe (descendant)"}
      ]
    },
    "sortOrder": {
      "type": "string",
      "title": "Ordre",
      "default": "asc",
      "oneOf": [
        {"const": "asc", "title": "Ascendant"},
        {"const": "desc", "title": "Descendant"}
      ]
    },
    "renderLines": {
      "type": "object",
      "default": {
        "type": "multi-lines"
      },
      "required": ["type"],
      "oneOf": [{
        "title": "Histogramme empilé",
        "properties": {
          "type": {
            "const": "stacked-bar",
            "title": "Type de visualisation"
          },
          "horizontal": {"$ref": "#/definitions/horizontal"}
        }
      }, {
        "title": "Histogramme groupé",
        "properties": {
          "type": {
            "const": "grouped-bar"
          },
          "horizontal": {"$ref": "#/definitions/horizontal"}
        }
      }, {
        "title": "Lignes",
        "properties": {
          "type": {
            "const": "multi-lines"
          }
        }
      }, {
        "title": "Aires",
        "properties": {
          "type": {
            "const": "stacked-area"
          }
        }
      }, {
        "title": "Camembert",
        "properties": {
          "type": {
            "const": "pie"
          }
        }
      }]
    },
    "renderAgg": {
      "type": "object",
      "title": "Présentation",
      "default": {
        "type": "bar"
      },
      "required": ["type"],
      "oneOf": [{
        "title": "Histogramme",
        "properties": {
          "type": {
            "const": "bar",
            "title": "Type de visualisation"
          },
          "horizontal": {"$ref": "#/definitions/horizontal"}
        }
      }, {
        "title": "Histogramme empilé",
        "required": ["secondGroupByField"],
        "properties": {
          "type": {
            "const": "stacked-bar"
          },
          "horizontal": {"$ref": "#/definitions/horizontal"},
          "secondGroupByField": {
            "type": "object",
            "title":"Séparer les piles par les valeurs de cette colonne",
            "x-fromUrl": "{datasets.0.href}/schema?enum=true",
            "x-itemTitle": "label",
            "x-itemKey": "key"
          },
          "secondSize": {
            "type": "integer",
            "title": "Nombre maximal d'éléments dans la pile",
            "default": 10
          }
        }
      }, {
        "title": "Histogramme groupé",
        "required": ["secondGroupByField"],
        "properties": {
          "type": {
            "const": "grouped-bar"
          },
          "horizontal": {"$ref": "#/definitions/horizontal"},
          "secondGroupByField": {
            "type": "object",
            "title":"Séparer les groupes par les valeurs de cette colonne",
            "x-fromUrl": "{datasets.0.href}/schema?enum=true",
            "x-itemTitle": "label",
            "x-itemKey": "key"
          },
          "secondSize": {
            "type": "integer",
            "title": "Nombre maximal de groupes",
            "default": 10
          }
        }
      }, {
        "title": "Ligne",
        "properties": {
          "type": {
            "const": "line"
          }
        }
      }, {
        "title": "Lignes multiples",
        "required": ["secondGroupByField"],
        "properties": {
          "type": {
            "const": "multi-lines"
          },
          "secondGroupByField": {
            "type": "object",
            "title":"Séparer les lignes par les valeurs de cette colonne",
            "x-fromUrl": "{datasets.0.href}/schema?enum=true",
            "x-itemTitle": "label",
            "x-itemKey": "key"
          },
          "showTotal": {
            "type": "boolean",
            "title": "Montrer le total",
            "default": true
          },
          "secondSize": {
            "type": "integer",
            "title": "Nombre maximal de lignes",
            "default": 10
          }
        }
      }, {
        "title": "Aire",
        "properties": {
          "type": {
            "const": "area"
          }
        }
      }, {
        "title": "Aires empilées",
        "required": ["secondGroupByField"],
        "properties": {
          "type": {
            "const": "stacked-area"
          },
          "secondGroupByField": {
            "type": "object",
            "title":"Séparer les aires par les valeurs de cette colonne",
            "x-fromUrl": "{datasets.0.href}/schema?enum=true",
            "x-itemTitle": "label",
            "x-itemKey": "key"
          },
          "secondSize": {
            "type": "integer",
            "title": "Nombre maximal d'aires empilées",
            "default": 10
          }
        }
      }, {
        "title": "Radar",
        "properties": {
          "type": {
            "const": "radar"
          }
        }
      }, {
        "title": "Radars à lignes multiples",
        "required": ["secondGroupByField"],
        "properties": {
          "type": {
            "const": "multi-radars"
          },
          "secondGroupByField": {
            "type": "object",
            "title":"Séparer les lignes par les valeurs de cette colonne",
            "x-fromUrl": "{datasets.0.href}/schema?enum=true",
            "x-itemTitle": "label",
            "x-itemKey": "key"
          },
          "secondSize": {
            "type": "integer",
            "title": "Nombre maximal de lignes",
            "default": 10
          }
        }
      }, {
        "title": "Camembert",
        "properties": {
          "type": {
            "const": "pie"
          }
        }
      }]
    },
    "filters": {
      "type": "object",
      "title": "Filtrage",
      "properties": {
        "staticFilters": {
          "title": "Filtres statiques",
          "description": "Ces filtres seront appliquées à tous les affichages de ce graphique de manière transparente pour l'utilisateur",
          "type": "array",
          "items": {
            "type": "object",
            "default": {
              "type": "in"
            },
            "required": ["type"],
            "oneOf": [{
              "title": "Restreindre à des valeurs",
              "properties": {
                "type": {
                  "const": "in",
                  "title": "Type de filtre"
                },
                "required": ["field", "values"],
                "field": {"$ref": "#/definitions/filterField"},
                "values": {
                  "type": "array",
                  "title": "Valeurs",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }, {
              "title": "Restreindre à un interval de valeurs",
              "properties": {
                "type": {
                  "const": "interval"
                },
                "required": ["field", "values"],
                "field": {"$ref": "#/definitions/filterField"},
                "minValue": {
                  "type": "string",
                  "title": "Valeur min"
                },
                "maxValue": {
                  "type": "string",
                  "title": "Valeur max"
                }
              }
            }, {
              "title": "Exclure des valeurs",
              "properties": {
                "type": {
                  "const": "out"
                },
                "required": ["field", "values"],
                "field": {"$ref": "#/definitions/filterField"},
                "values": {
                  "type": "array",
                  "title": "Valeurs à exclure",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }]
          }
        },
        "dynamicFilters": {
          "title": "Filtres dynamiques",
          "description": "Ces filtres seront proposés à l'utilisateur sous forme de formulaire en haut du graphique",
          "type": "array",
          "items": {
            "type": "object",
            "required": ["field"],
            "properties": {
              "field": {
                "type": "object",
                "title": "Colonne de filtre",
                "x-fromUrl": "{datasets.0.href}/schema",
                "x-itemTitle": "label",
                "x-itemKey": "key"
              },
              "defaultValues": {
                "type": "array",
                "title": "Valeurs par défaut",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "nbGroups": {
      "type": "integer",
      "title": "Nombre maximal de groupes",
      "default": 10
    },
    "size": {
      "type": "integer",
      "title": "Nombre maximal d'éléments",
      "default": 10
    },
    "groupField":  {
      "type": "object",
      "title":"Grouper en fonction de cette colonne",
      "x-fromUrl": "{datasets.0.href}/schema",
      "x-itemTitle": "label",
      "x-itemKey": "key"
    },
    "groupFieldDate":  {
      "type": "object",
      "title":"Grouper en fonction de cette colonne",
      "x-fromUrl": "{datasets.0.href}/schema?format=date,date-time",
      "x-itemTitle": "label",
      "x-itemKey": "key"
    },
    "groupFieldNumber":  {
      "type": "object",
      "title":"Grouper en fonction de cette colonne",
      "x-fromUrl": "{datasets.0.href}/schema?type=integer,number",
      "x-itemTitle": "label",
      "x-itemKey": "key"
    },
    "filterField": {
      "type": "object",
      "title": "Colonne de filtre",
      "x-fromUrl": "{datasets.0.href}/schema",
      "x-itemTitle": "label",
      "x-itemKey": "key"
    },
    "horizontal": {
      "type": "boolean",
      "title": "Inverser l'affichage"
    }
  }
}
